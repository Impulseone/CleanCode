Пункт 1

    Пример 1
        ...
        // имя нужного pdf файла содержится в первой строке списка путей к файлам
        // и является последним в строке после разделителя '/'
        pdfName = filePathsList.get(0).split("/")[pdfNameArray.length - 1];
        ...

    Пример 2

    // Возвращает экземпляр ViewModel родительского фрагмента
    inline fun <reified T : Fragment, reified VM : ViewModel> Fragment.parentViewModel() =
        lazy(LazyThreadSafetyMode.NONE) {
            var currentFragment = this
            while (currentFragment !is T) {
                currentFragment = currentFragment.requireParentFragment()
            }
            currentFragment.getViewModel<VM>()
        }

    Пример 3

    // Автоматически сворачивает клавиатуру после введения запроса и выполняет заданные действия
    fun SearchView.onLiveSearch(
        onQueryTextSubmit: (query: String?) -> Unit,
        onCloseView: (() -> Unit)? = null
    ) {
        ...
    }

Пункт 2

    Пример 1

       // Проверяем быстродействие сервиса ElasticSearch
       @Test
       public void loadAllComments() {
           long start = new Date().getTime();
           searchService.loadAllComments("6ea41470-a62e-4c19-895b-fad0b5dda8e8");
           long elapsed = new Date().getTime() - start;
           System.out.println("Elapsed time:" + elapsed);
       }

Пункт 3

    Пример 1

        // p0 - сообщение, p1 - id пользователя, от которого оно пришло
        override fun onMessageReceived(p0: RtmMessage?, p1: String?) {
            p0?.apply { _receivedMessageFlow.tryEmit(this.text) }
        }

    Пример 2

        // String - id пользователя, Int - код его статуса в сети
        override fun onPeersOnlineStatusChanged(status: MutableMap<String, Int>?) {
            ...
        }

    Пример 3

        // p0 - файл, прикрепленный к сообщению, p1 - id пользователя, который его отправил
        override fun onFileMessageReceivedFromPeer(p0: RtmFileMessage?, p1: String?) {
                p0?.apply { _receivedFileMessageFlow.tryEmit(this) }
        }

Пункт 4

    Пример 1

    // Передавать только реальный url,
    // иначе будет постоянно пытаться загрузить изображение и спамить в логах об ошибке
    fun Context.downloadBitmap(
        url: String,
        width: Int,
        height: Int,
        onResult: (Bitmap?) -> Unit
    ) {
        Glide.with(this)
            .asBitmap()
            .load(url)
            .into(object : CustomTarget<Bitmap>(width, height) {
                override fun onResourceReady(resource: Bitmap, transition: Transition<in Bitmap>?) {
                    onResult(resource)
                }

                override fun onLoadCleared(placeholder: Drawable?) {
                    onResult(null)
                }
            })
    }


Пункт 5

    Пример 1

    @Override
    public void setView(PlatesButton platesButton, Activity hub) {
            ...
            // обязательно очищаем хранилище выбранных фильтров, иначе при переключении в другой режим будет сбой
            FiltersKeeper.getInstance().clear();
            ...
    }

Пункт 6

    Пример 1

        override fun sendImageMessage(){
            // TODO: Реализовать метод в версии 1.4
        }

    Пример 2

        // TODO: Протестировать работу класса на различных данных
        class AttachmentServiceImpl(){
            ...
        }

    Пример 3

        // TODO: нужен рефакторинг логики
        private void setSecondaryFilterTitle() {
            if (!PlatesRegimeKeeper.getInstance().isPlatesEnabled()) {
                String filterName = "";
                for (Tag tag : comment.getTask().getTags()) {
                    if (tag.getValue().startsWith("7")) {
                        filterName = tag.getValue().split("/")[1];
                    }
                }
                for (Tag tag : comment.getTask().getTags()) {
                    if (tag.getValue().startsWith("8")) {
                        filterName += "(" + findNumber(tag) + ")";
                    }
                }
                ((TextView) itemView.findViewById(R.id.secondary_filter_title)).setText(filterName);
            }
        }

